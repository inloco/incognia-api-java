plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'com.diffplug.spotless' version '6.11.0'
    id 'io.github.gradle-nexus.publish-plugin' version '1.2.0'
}

group = "com.incognia"
version = "2.3.2"

task createProjectVersionFile {
    def projectVersionDir = "$projectDir/src/main/java/com/incognia/api"
    doLast {
        new File(projectVersionDir, "ProjectVersion.java").text =
"""package com.incognia.api;

public class ProjectVersion {
  public static final String PROJECT_VERSION = "$project.version";
}
"""
    }
}
compileJava.dependsOn createProjectVersionFile

repositories {
    mavenCentral()
}

configurations {
    testCompileOnly.extendsFrom compileOnly
    testAnnotationProcessor.extendsFrom annotationProcessor
}

ext {
    lombokVersion = '1.18.26'
}

dependencies {
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation platform("com.squareup.okhttp3:okhttp-bom:4.10.0")
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.2"

    testImplementation 'com.auth0:java-jwt:4.2.2'
    testImplementation 'commons-io:commons-io:2.11.0'
    testImplementation 'org.assertj:assertj-core:3.23.1'
    testImplementation 'org.mockito:mockito-core:5.1.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
    testImplementation "com.squareup.okhttp3:mockwebserver"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.9.2"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
    withSourcesJar()
    withJavadocJar()
}

compileJava {
    sourceCompatibility '1.8'
    targetCompatibility '1.8'
}

spotless {
    java {
        googleJavaFormat()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) { publication ->
            publication.artifactId = 'incognia-api-client'
            artifact tasks.jar
            artifact tasks.javadocJar
            artifact tasks.sourcesJar
            pom {
                name = 'Incognia API Client'
                description = "Java client library for Incognia's API"
                url = 'https://github.com/inloco/incognia-api-java'
                developers {
                    developer {
                        id = 'racevedoo'
                        name = 'Rafael Acevedo'
                        email = 'rafael.acevedo@incognia.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/inloco/incognia-api-java.git'
                    developerConnection = 'scm:git:ssh://github.com/inloco/incognia-api-java.git'
                    url = 'https://github.com/inloco/incognia-api-java'
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'http://www.opensource.org/licenses/mit-license.php'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            url 's3://repo.incognia.com/java'
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}

